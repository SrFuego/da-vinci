import pytest
import pathlib

def pytest_sessionstart(session):
    keywords = {
        "Feature": ["Funcionalidade", "Característica", "Caracteristica"],
        "Background": ["Contexto", "Cenário de Fundo", "Cenario de Fundo", "Fundo"],
        "Scenario": ["Cenário", "Cenario", "Escenario"],
        "ScenarioOutline": ["Esquema do Cenário", "Esquema do Cenario", "Delineação do Cenário", "Delineacao do Cenario"],
        "Examples": ["Exemplos", "Cenários", "Cenarios"],
        "Given": ["Dado", "Dada", "Dados", "Dadas"],
        "When": ["Quando", "Cuando"],
        "Then": ["Então", "Entao", "Entonces"],
        "And": ["E"],
        "But": ["Mas"]
    }
    path = pathlib.Path(__file__).parent.absolute()
    path_in = path / "features"
    path_out = path / "translated_features"
    if not path_out.exists():
        path_out.mkdir()
    feature_files = list(path_in.glob("*.feature"))
    for file in feature_files:
        output = path_out / file.name
        print(f"> Traduzindo {output}")
        f1 = open(file, "r", encoding="utf-8")
        lines = f1.readlines()
        for n in range(len(lines)):
            for key in keywords:
                for word in keywords[key]:
                    if lines[n].strip().startswith(word):
                        lines[n] = lines[n].replace(word, key)
        lines.insert(0, "# File automatically generated by pytest_sessionstart() in tests/conftest.py\n")
        with open(output, 'w', encoding="utf-8") as f2:
            f2.writelines(lines)