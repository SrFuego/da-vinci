# Created by https://www.toptal.com/developers/gitignore/api/python
# Edit at https://www.toptal.com/developers/gitignore?templates=python

### Python ###
# Byte-compiled / optimized / DLL files
**/__pycache__/
**/*.py[cod]
**/*$py.class

# C extensions
**/*.so

# Distribution / packaging
**/.Python
**/build/
**/develop-eggs/
**/dist/
**/downloads/
**/eggs/
**/.eggs/
**/lib/
**/lib64/
**/parts/
**/sdist/
**/var/
**/wheels/
**/share/python-wheels/
**/*.egg-info/
**/.installed.cfg
**/*.egg
**/MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
**/*.manifest
**/*.spec

# Installer logs
**/pip-log.txt
**/pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/
cov/

# Translations
**/*.mo
**/*.pot

# Django stuff:
**/*.log
**/local_settings.py
api-django/db.sqlite3
**/db.sqlite3-journal

# Sphinx documentation
api-django/docs/_build/

# PyBuilder
**/.pybuilder/
**/target/

# IPython
api-django/profile_default/
api-django/ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
api-django/.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
api-django/__pypackages__/

# Environments
api-django/.env
api-django/.env_develop
api-django/.env_stage
api-django/.env_production
api-django/.venv
api-django/env/
api-django/venv/
api-django/ENV/
api-django/env.bak/
api-django/venv.bak/

# Spyder project settings
api-django/.spyderproject
api-django/.spyproject

# Rope project settings
api-django/.ropeproject

# mkdocs documentation
api-django/site

# mypy
**.mypy_cache/
**.dmypy.json
**dmypy.json

# Pyre type checker
api-django/.pyre/

# pytype static type analyzer
api-django/.pytype/

# Cython debug symbols
api-django/cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/

### Python Patch ###
# Poetry local configuration file - https://python-poetry.org/docs/configuration/#local-configuration
api-django/poetry.toml

# ruff
api-django/.ruff_cache/

# LSP config files
api-django/pyrightconfig.json

# End of https://www.toptal.com/developers/gitignore/api-django/python

# Allure reports
*my_allure/

*.vscode/
**.DS_Store

# Miscellaneous
*.class
*.log
*.pyc
*.swp
api-django/.DS_Store
api-django/.atom/
api-django/.buildlog/
api-django/.history
api-django/.svn/
api-django/migrate_working_dir/

# Miscellaneous
*.class
*.log
*.pyc
*.swp
.DS_Store
.atom/
.buildlog/
.history
.svn/
migrate_working_dir/

# IntelliJ related
*.iml
*.ipr
*.iws
.idea/

# Flutter/Dart/Pub related
app/**/doc/api-django/
app/**/ios/Flutter/.last_build_id
app/.dart_tool/
app/.flutter-plugins
app/.flutter-plugins-dependencies
app/.packages
app/.pub-cache/
app/.pub/
app/build/

# Symbolication related
app/app.*.symbols

# Obfuscation related
app/app.*.map.json

# Android Studio will place build artifacts here
app/android/app/debug
app/android/app/profile
app/android/app/release

# Allure reports
allure-report
allure-results

git-filter-repo
