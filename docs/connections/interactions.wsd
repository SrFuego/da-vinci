@startuml Da Vinci
!theme vibrant

title Da Vinci

actor Usuario
boundary App
queue Backend
database DB


Usuario -> App: Abre la App
Usuario <-- App: Muestra lista de opciones: \n- Pregunta Individual \n- Grupo de Preguntas \n- Exámenes pasados
Usuario -> App: Selecciona "Pregunta Individual"
Usuario <-- App: Muestra lista de opciones: \n- Pregunta Aleatoria \n- Elegir Curso

group#Gold  #LimeGreen Resolver Pregunta Aleatoria
group#SkyBlue #LightBlue Mostrar
Usuario -> App: Selecciona "Pregunta Aleatoria"
activate App
App -> Backend: **GET /api/v1/pregunta_aleatoria/**
activate Backend
Backend -> DB: Filtrar por: \n- Preguntas válidas (completas)
Backend <-- DB: Objeto Pregunta
App <-- Backend: Response: \n- Nombre del Curso \n- Nombre del Tema \n- Enunciado \n- Alternativas
deactivate Backend
Usuario <-- App: Muestra PEA
deactivate App
end
group#SkyBlue #LightBlue Resolver
Usuario -> App: Envía su Respuesta: \n- Selecciona una alternativa \n- Deja en blanco
activate App
App -> Backend: **POST /api/v1/resolver_pregunta_individual/** \n-ID de la Alternativa seleccionada
activate Backend
Backend -> DB: Filtrar por: \n- ID de Alternativa
Backend <-- DB: Objeto Alternativa
App <-- Backend: Response: \n- Solución \n- Alternativa enviada \n- Puntaje obtenido
deactivate Backend
Usuario <-- App: Muestra: \n- La PEA \n- La solución \n- Teoría del Tema \n- Puntaje obtenido \n- Resalta: \n\t- La alternativa enviada \n\t- La alternativa correcta \n\nTambién los botones de navegación: \n- Siguiente Pregunta Aleatoria \n- Home
deactivate App
end
end
@enduml
